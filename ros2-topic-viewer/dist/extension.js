"use strict";var _=Object.create;var w=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var G=Object.getPrototypeOf,O=Object.prototype.hasOwnProperty;var y=(s,e)=>{for(var o in e)w(s,o,{get:e[o],enumerable:!0})},P=(s,e,o,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of D(e))!O.call(s,t)&&t!==o&&w(s,t,{get:()=>e[t],enumerable:!(r=k(e,t))||r.enumerable});return s};var p=(s,e,o)=>(o=s!=null?_(G(s)):{},P(e||!s||!s.__esModule?w(o,"default",{value:s,enumerable:!0}):o,s)),A=s=>P(w({},"__esModule",{value:!0}),s);var z={};y(z,{activate:()=>R,execWithRosSetup:()=>v,getRosSetupScript:()=>I,spawnWithRosSetup:()=>h});module.exports=A(z);var i=p(require("vscode"));var l=p(require("vscode"));var u=class{_onDidChangeTreeData=new l.EventEmitter;onDidChangeTreeData=this._onDidChangeTreeData.event;_advancedMode=!1;constructor(){console.log("ROS2TopicsProvider initialized")}refresh(){console.log("Refresh called"),this._onDidChangeTreeData.fire()}toggleAdvanced(){return console.log("Advanced mode toggled"),this._advancedMode=!this._advancedMode,this._advancedMode}getAdvancedMode(){return this._advancedMode}getChildren(e){return new Promise((o,r)=>{v("ros2 topic list",(t,n,m)=>{if(t)return console.error(`Error fetching topics: ${t.message}`),r(t);if(m)return console.error(`Error: ${m}`),r(new Error(m));let d=n.split(`
`).filter(c=>c).map(c=>{let g=new l.TreeItem(c,l.TreeItemCollapsibleState.None);return g.command={command:"ros2-topic-viewer.showMessages",title:"Show messages from ${topic}",arguments:[c]},g});o(d)})})}getTreeItem(e){return e}};var a="ros2-topic-viewer",f="ROS2 Topic Viewer";var T=require("child_process"),M=require("child_process"),b=p(require("fs")),x=p(require("path"));function R(s){let e=new u;i.window.registerTreeDataProvider("ros2TopicsView",e);let o=[],r=4,t=i.commands.registerCommand(`${a}.refreshTopics`,()=>{e.refresh(),i.window.showInformationMessage(f+": Topics refreshed!")}),n=i.commands.registerCommand(`${a}.showMessages`,d=>{let c=i.workspace.getConfiguration(a);if(o.length>=r&&c.get("panelLimitSetting")){i.window.showErrorMessage("Reached maximum number of panels! Please close a panel to open a new one.");return}let g=o.find($=>$.title===`Messages for ${d}`);if(g){g.reveal(i.ViewColumn.One);return}let S=i.window.createWebviewPanel("topicMessages",`Messages for ${d}`,i.ViewColumn.One,{enableScripts:!0});o.push(S),L(d,S,o),e.getAdvancedMode()&&V(d,S)}),m=i.commands.registerCommand(`${a}.toggleAdvanced`,()=>{e.toggleAdvanced()?i.window.showInformationMessage(f+": Advanced mode enabled! Close panels to apply."):i.window.showInformationMessage(f+": Advanced mode disabled! Close panels to apply.")}),C=i.commands.registerCommand(`${a}.togglePanelLimit`,()=>{W()});s.subscriptions.push(t),s.subscriptions.push(n),s.subscriptions.push(m),s.subscriptions.push(C)}async function W(){try{let s=i.workspace.getConfiguration(a),e=s.get("panelLimitSetting");await s.update("panelLimitSetting",!e,i.ConfigurationTarget.Global),i.window.showInformationMessage("The panel limit setting is now set to: "+s.get("panelLimitSetting"))}catch(s){i.window.showErrorMessage("Error: "+s)}}function I(){try{let e=i.workspace.getConfiguration(a).get("rosSetupScript");return e&&b.existsSync(e)?e:void 0}catch(s){i.window.showErrorMessage("Error: "+s)}}function v(s,e){let o=I();if(o){let r=`bash -c 'source ${o}; ${s}'`;return(0,M.exec)(r,e)}else return(0,M.exec)(s,e)}function h(s,e){let o=I();return o?(0,T.spawn)("bash",["-c",`source ${o}; ${s} ${e.join(" ")}`]):(0,T.spawn)(s,e)}async function N(s,e){if(e.visible===!1)return;let o=v("ros2 topic info "+s+" --verbose");o.stdout?.on("data",r=>{e.webview.postMessage({command:"pushInfo",message:r.toString()}),o.kill()}),o.stderr?.on("data",r=>{console.error(`Error from process secundary: ${r}`),e.webview.postMessage({command:"error",message:r})})}async function L(s,e,o){e.onDidDispose(()=>{console.log("Disposing panel"),o.splice(o.indexOf(e),1),r&&(r.kill("SIGCONT"),r.kill("SIGTERM")),t&&(t.kill("SIGCONT"),t.kill("SIGTERM"))}),e.webview.html=E(s);let r=h("ros2",["topic","echo",s]),t=v("ros2 topic info "+s+" --verbose");r.stdout?.on("data",n=>{if(n.length>1e4){n=n.slice(0,1e4),n=`Unable to visualize the entire message. The message is too big. 

`,e.webview.postMessage({command:"error",message:n.toString()});return}n.toString().includes("fastrtps_port")||e.webview.postMessage({command:"update",message:n.toString()})}),r.stderr?.on("data",n=>{console.error(`Error: ${n}`),e.webview.postMessage({command:"error",message:n})}),r.on("exit",n=>{console.log(`Process exited with code: ${n}`),e.webview.postMessage({command:"exit",message:`The command has exited with code ${n}.`})}),t.stdout?.on("data",n=>{n.toString().includes("fastrtps_port")||(e.webview.postMessage({command:"pushInfo",message:n}),t.kill())}),t.stderr?.on("data",n=>{console.error(`Error from process secundary: ${n}`),e.webview.postMessage({command:"error",message:n})}),e.onDidChangeViewState(n=>{n.webviewPanel.visible?(r&&r.kill("SIGCONT"),t&&t.kill("SIGCONT"),N(s,e)):(r&&r.kill("SIGSTOP"),t&&t.kill("SIGSTOP"))}),e.webview.postMessage({command:"hideAdvanced",message:"Advanced mode disabled!"})}async function V(s,e){e.webview.html=E(s);let o=h("ros2",["topic","hz",s]),r=h("ros2",["topic","bw",s]);e.webview.postMessage({command:"showAdvanced",message:"Advanced mode enabled!"}),e.onDidDispose(()=>{o&&(o.kill("SIGCONT"),o.kill("SIGTERM")),r&&(r.kill("SIGCONT"),r.kill("SIGTERM"))}),o.stdout?.on("data",t=>{t.toString().includes("fastrtps_port")||e.webview.postMessage({command:"updateHz",message:t.toString()})}),o.stderr?.on("data",t=>{console.error(`Error: ${t}`),e.webview.postMessage({command:"error",message:t})}),o.on("exit",t=>{console.log(`Process exited with code: ${t}`),e.webview.postMessage({command:"exit",message:`The command has exited with code ${t}.`})}),r.stdout?.on("data",t=>{t.toString().includes("fastrtps_port")||t.toString().includes("Subscribed")||e.webview.postMessage({command:"updateBw",message:t.toString()})}),r.stderr?.on("data",t=>{console.error(`Error: ${t}`),e.webview.postMessage({command:"error",message:t})}),e.onDidChangeViewState(t=>{if(t.webviewPanel.visible){o.kill("SIGCONT"),r.kill("SIGCONT"),e.webview.postMessage({command:"showAdvanced",message:"Advanced mode enabled!"});return}else o.kill("SIGSTOP"),r.kill("SIGSTOP")})}function E(s){let e=x.join(__dirname,"..","media","webview.html"),o=b.readFileSync(e,"utf8");return o=o.replace("${topic}",s),o}0&&(module.exports={activate,execWithRosSetup,getRosSetupScript,spawnWithRosSetup});
